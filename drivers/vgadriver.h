//also, use this as a base for a png loader:
//https://github.com/IgorGreenIGM/IO_PNG/blob/main/src/PNG/PNG.cpp#L155

#ifndef VGADRIVER_H
#define VGADRIVER_H

/*enum vga_registerType
{
    attribute,
    CRTC,
    sequencer,
    graphics_control,
    the_misc_register
};*/

/*struct vga_registerKey
{
    vga_registerType reg;
    unsigned char index;
    char data;
};*/

unsigned char vgafont8[256 * 8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04, 0x00,
    0x00, 0x0a, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0a, 0x1f, 0x0a, 0x1f, 0x0a, 0x00, 0x00,
    0x04, 0x1e, 0x05, 0x0e, 0x14, 0x0f, 0x04, 0x00,
    0x17, 0x15, 0x0f, 0x04, 0x1a, 0x15, 0x1d, 0x00,
    0x00, 0x0e, 0x0a, 0x16, 0x0d, 0x09, 0x17, 0x00,
    0x18, 0x0c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00,
    0x04, 0x08, 0x10, 0x10, 0x10, 0x08, 0x04, 0x00,
    0x00, 0x00, 0x04, 0x0e, 0x04, 0x0a, 0x00, 0x00,
    0x00, 0x04, 0x04, 0x1f, 0x04, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00,
    0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00,
    0x0e, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0e, 0x00,
    0x06, 0x07, 0x04, 0x04, 0x04, 0x04, 0x1f, 0x00,
    0x0f, 0x11, 0x10, 0x1e, 0x01, 0x01, 0x1f, 0x00,
    0x1f, 0x11, 0x10, 0x1e, 0x10, 0x11, 0x1f, 0x00,
    0x0c, 0x0a, 0x09, 0x1f, 0x08, 0x08, 0x08, 0x00,
    0x1f, 0x01, 0x01, 0x0f, 0x10, 0x10, 0x0f, 0x00,
    0x0e, 0x11, 0x01, 0x0f, 0x11, 0x11, 0x0e, 0x00,
    0x1f, 0x10, 0x08, 0x04, 0x04, 0x04, 0x04, 0x00,
    0x0e, 0x11, 0x11, 0x0e, 0x11, 0x11, 0x0e, 0x00,
    0x0e, 0x11, 0x11, 0x1e, 0x10, 0x10, 0x0e, 0x00,
    0x00, 0x04, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00,
    0x00, 0x04, 0x04, 0x00, 0x04, 0x02, 0x00, 0x00,
    0x00, 0x10, 0x08, 0x04, 0x08, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x08, 0x10, 0x08, 0x04, 0x00, 0x00,
    0x0c, 0x12, 0x10, 0x08, 0x04, 0x00, 0x04, 0x00,
    0x0e, 0x11, 0x19, 0x15, 0x15, 0x19, 0x0e, 0x00,
    0x04, 0x0a, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x00,
    0x0f, 0x11, 0x11, 0x0f, 0x11, 0x11, 0x0f, 0x00,
    0x1c, 0x02, 0x01, 0x01, 0x01, 0x02, 0x1c, 0x00,
    0x0f, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0f, 0x00,
    0x1f, 0x01, 0x01, 0x07, 0x01, 0x01, 0x1f, 0x00,
    0x1f, 0x01, 0x01, 0x07, 0x01, 0x01, 0x01, 0x00,
    0x0e, 0x11, 0x01, 0x01, 0x19, 0x11, 0x0e, 0x00,
    0x11, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x11, 0x00,
    0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1f, 0x00,
    0x1e, 0x08, 0x08, 0x08, 0x09, 0x09, 0x06, 0x00,
    0x11, 0x09, 0x05, 0x03, 0x05, 0x09, 0x11, 0x00,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1f, 0x00,
    0x11, 0x1b, 0x15, 0x15, 0x11, 0x11, 0x11, 0x00,
    0x11, 0x13, 0x15, 0x15, 0x15, 0x19, 0x11, 0x00,
    0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e, 0x00,
    0x0f, 0x11, 0x11, 0x0f, 0x01, 0x01, 0x01, 0x00,
    0x06, 0x09, 0x09, 0x09, 0x0d, 0x0d, 0x1e, 0x00,
    0x0f, 0x11, 0x11, 0x0f, 0x05, 0x09, 0x11, 0x00,
    0x1e, 0x01, 0x01, 0x0e, 0x10, 0x10, 0x0f, 0x00,
    0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e, 0x00,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x0a, 0x04, 0x00,
    0x11, 0x15, 0x15, 0x15, 0x15, 0x15, 0x0a, 0x00,
    0x11, 0x0a, 0x0a, 0x04, 0x0a, 0x0a, 0x11, 0x00,
    0x11, 0x11, 0x0a, 0x04, 0x04, 0x04, 0x04, 0x00,
    0x1f, 0x10, 0x08, 0x04, 0x02, 0x01, 0x1f, 0x00,
    0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x07, 0x00,
    0x01, 0x02, 0x04, 0x04, 0x08, 0x10, 0x10, 0x00,
    0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x07, 0x00,
    0x04, 0x0a, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
    0x02, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x06, 0x08, 0x0f, 0x09, 0x1e, 0x00,
    0x01, 0x01, 0x01, 0x0f, 0x11, 0x11, 0x0f, 0x00,
    0x00, 0x00, 0x0e, 0x01, 0x01, 0x01, 0x0e, 0x00,
    0x10, 0x10, 0x10, 0x1e, 0x11, 0x11, 0x1e, 0x00,
    0x00, 0x00, 0x0e, 0x11, 0x1f, 0x01, 0x1e, 0x00,
    0x1c, 0x02, 0x02, 0x1f, 0x02, 0x02, 0x02, 0x00,
    0x00, 0x1e, 0x11, 0x11, 0x1e, 0x10, 0x1e, 0x00,
    0x01, 0x01, 0x01, 0x0f, 0x11, 0x11, 0x11, 0x00,
    0x00, 0x04, 0x00, 0x04, 0x04, 0x04, 0x04, 0x00,
    0x04, 0x00, 0x04, 0x04, 0x04, 0x05, 0x02, 0x00,
    0x00, 0x01, 0x11, 0x09, 0x07, 0x09, 0x11, 0x00,
    0x00, 0x06, 0x04, 0x04, 0x04, 0x04, 0x0c, 0x00,
    0x00, 0x00, 0x11, 0x1b, 0x15, 0x15, 0x11, 0x00,
    0x00, 0x00, 0x01, 0x0f, 0x11, 0x11, 0x11, 0x00,
    0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e, 0x00,
    0x00, 0x00, 0x0f, 0x11, 0x0f, 0x01, 0x01, 0x00,
    0x00, 0x00, 0x1e, 0x11, 0x1e, 0x10, 0x10, 0x00,
    0x00, 0x00, 0x0d, 0x13, 0x01, 0x01, 0x01, 0x00,
    0x00, 0x00, 0x1e, 0x01, 0x0e, 0x10, 0x0f, 0x00,
    0x04, 0x04, 0x1f, 0x04, 0x04, 0x14, 0x08, 0x00,
    0x00, 0x00, 0x09, 0x09, 0x09, 0x09, 0x1e, 0x00,
    0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04, 0x00,
    0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a, 0x00,
    0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x00,
    0x00, 0x00, 0x11, 0x0a, 0x04, 0x04, 0x03, 0x00,
    0x00, 0x00, 0x1f, 0x10, 0x0e, 0x01, 0x1f, 0x00,
    0x0c, 0x02, 0x02, 0x03, 0x02, 0x02, 0x0c, 0x00,
    0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00,
    0x03, 0x04, 0x04, 0x0c, 0x04, 0x04, 0x03, 0x00,
    0x15, 0x2a, 0x15, 0x2a, 0x15, 0x2a, 0x15, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x04, 0x04, 0x1f, 0x04, 0x04, 0x04, 0x04, 0x00,
    0x00, 0x04, 0x0e, 0x1f, 0x0e, 0x04, 0x00, 0x00,
    0x00, 0x1f, 0x15, 0x1f, 0x1f, 0x11, 0x1f, 0x00,
    0x00, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x00,
    0x1f, 0x11, 0x1f, 0x11, 0x1f, 0x11, 0x1f, 0x00,
    0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00,
    0x00, 0x0e, 0x0b, 0x0f, 0x09, 0x0a, 0x1e, 0x00,
    0x18, 0x0c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0a, 0x00, 0x11, 0x0e, 0x00, 0x00, 0x00,
    0x00, 0x06, 0x0f, 0x0f, 0x0f, 0x06, 0x00, 0x00,
    0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x00,
    0x00, 0x04, 0x04, 0x1f, 0x0e, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1f, 0x00,
    0x00, 0x00, 0x00, 0x1f, 0x04, 0x04, 0x04, 0x00,
    0x00, 0x00, 0x06, 0x0e, 0x0e, 0x1a, 0x02, 0x00,
    0x01, 0x13, 0x08, 0x0c, 0x0e, 0x0d, 0x00, 0x00};

struct vga_videoMode
{
    char *m_attributeSettings;
    char *m_crtcSettings;
    char *m_sequencerSettings;
    char *m_graphicsControlSettings;
    char m_miscControl;

    //dumps the contents of all the vga registers into this struct
    void dumpCurrentVideoMode();

    void printRegisters(char info = 0);

    //apply this video mode to the vga card
    void applyToSystem();

    void manual_delete()
    {
        free(m_attributeSettings);
        free(m_crtcSettings);
        free(m_sequencerSettings);
        free(m_graphicsControlSettings);
    }
};

char black = 0x00;
char blue = 0x01;

vga_videoMode vgaDefaultTextmode;
vga_videoMode vga300200ShittyAssBullshit256;
//sucks but there's not a better way
void populateVgaDefaultTextmode()
{
    //i have to do it the hard way
    //attribute
    vgaDefaultTextmode.m_attributeSettings = (char*)malloc(0x15);
    vgaDefaultTextmode.m_attributeSettings[0] = 0x00;
    vgaDefaultTextmode.m_attributeSettings[1] = 0x01;
    vgaDefaultTextmode.m_attributeSettings[2] = 0x02;
    vgaDefaultTextmode.m_attributeSettings[3] = 0x03;
    vgaDefaultTextmode.m_attributeSettings[4] = 0x04;
    vgaDefaultTextmode.m_attributeSettings[5] = 0x05;
    vgaDefaultTextmode.m_attributeSettings[6] = 0x14;
    vgaDefaultTextmode.m_attributeSettings[7] = 0x07;
    vgaDefaultTextmode.m_attributeSettings[8] = 0x38;
    vgaDefaultTextmode.m_attributeSettings[9] = 0x39;
    vgaDefaultTextmode.m_attributeSettings[10] = 0x3A;//A
    vgaDefaultTextmode.m_attributeSettings[11] = 0x3B;//B
    vgaDefaultTextmode.m_attributeSettings[12] = 0x3C;//C
    vgaDefaultTextmode.m_attributeSettings[13] = 0x3D;//D
    vgaDefaultTextmode.m_attributeSettings[14] = 0x3E;//R
    vgaDefaultTextmode.m_attributeSettings[15] = 0x3F;//F
    vgaDefaultTextmode.m_attributeSettings[16] = 0x0C;//10
    vgaDefaultTextmode.m_attributeSettings[17] = 0x00;//11
    vgaDefaultTextmode.m_attributeSettings[18] = 0x0F;//12
    vgaDefaultTextmode.m_attributeSettings[19] = 0x08;//13
    vgaDefaultTextmode.m_attributeSettings[20] = 0x00;//14


    //crtc
    vgaDefaultTextmode.m_crtcSettings = (char*)malloc(25);
    vgaDefaultTextmode.m_crtcSettings[0] = 0x5F;
    vgaDefaultTextmode.m_crtcSettings[1] = 0x4F;
    vgaDefaultTextmode.m_crtcSettings[2] = 0x50;
    vgaDefaultTextmode.m_crtcSettings[3] = 0x82;
    vgaDefaultTextmode.m_crtcSettings[4] = 0x55;
    vgaDefaultTextmode.m_crtcSettings[5] = 0x81;
    vgaDefaultTextmode.m_crtcSettings[6] = 0xBF;
    vgaDefaultTextmode.m_crtcSettings[7] = 0x1F;
    vgaDefaultTextmode.m_crtcSettings[8] = 0x00;
    vgaDefaultTextmode.m_crtcSettings[9] = 0x4F;
    vgaDefaultTextmode.m_crtcSettings[10] = 0x0D;
    vgaDefaultTextmode.m_crtcSettings[11] = 0x0E;
    vgaDefaultTextmode.m_crtcSettings[12] = 0x00;
    vgaDefaultTextmode.m_crtcSettings[13] = 0x00;
    vgaDefaultTextmode.m_crtcSettings[14] = 0x00;
    vgaDefaultTextmode.m_crtcSettings[15] = 0xF0;
    vgaDefaultTextmode.m_crtcSettings[16] = 0x9C;
    vgaDefaultTextmode.m_crtcSettings[17] = 0x8E;
    vgaDefaultTextmode.m_crtcSettings[18] = 0x8F;
    vgaDefaultTextmode.m_crtcSettings[19] = 0x28;
    vgaDefaultTextmode.m_crtcSettings[20] = 0x1F;
    vgaDefaultTextmode.m_crtcSettings[21] = 0x96;
    vgaDefaultTextmode.m_crtcSettings[22] = 0xB9;
    vgaDefaultTextmode.m_crtcSettings[23] = 0xA3;
    vgaDefaultTextmode.m_crtcSettings[24] = 0xFF;

    //general graphics
    vgaDefaultTextmode.m_graphicsControlSettings = (char*)malloc(9);
    vgaDefaultTextmode.m_graphicsControlSettings[0] = 0x00;
    vgaDefaultTextmode.m_graphicsControlSettings[1] = 0x00;
    vgaDefaultTextmode.m_graphicsControlSettings[2] = 0x00;
    vgaDefaultTextmode.m_graphicsControlSettings[3] = 0x00;
    vgaDefaultTextmode.m_graphicsControlSettings[4] = 0x00;
    vgaDefaultTextmode.m_graphicsControlSettings[5] = 0x10;
    vgaDefaultTextmode.m_graphicsControlSettings[6] = 0x0E;
    vgaDefaultTextmode.m_graphicsControlSettings[7] = 0x00;
    vgaDefaultTextmode.m_graphicsControlSettings[8] = 0xFF;

    //sequence
    vgaDefaultTextmode.m_sequencerSettings = (char*)malloc(5);
    vgaDefaultTextmode.m_sequencerSettings[0] = 0x03;
    vgaDefaultTextmode.m_sequencerSettings[1] = 0x00;
    vgaDefaultTextmode.m_sequencerSettings[2] = 0x03;
    vgaDefaultTextmode.m_sequencerSettings[3] = 0x00;
    vgaDefaultTextmode.m_sequencerSettings[4] = 0x02;

    vgaDefaultTextmode.m_miscControl = 0x67;

}

void populateShittyAssVideoMode()
{
    //i have to do it the hard way
    //attribute
    vga300200ShittyAssBullshit256.m_attributeSettings = (char*)malloc(0x15);
    vga300200ShittyAssBullshit256.m_attributeSettings[0] = 0x00;
    vga300200ShittyAssBullshit256.m_attributeSettings[1] = 0x01;
    vga300200ShittyAssBullshit256.m_attributeSettings[2] = 0x02;
    vga300200ShittyAssBullshit256.m_attributeSettings[3] = 0x03;
    vga300200ShittyAssBullshit256.m_attributeSettings[4] = 0x04;
    vga300200ShittyAssBullshit256.m_attributeSettings[5] = 0x05;
    vga300200ShittyAssBullshit256.m_attributeSettings[6] = 0x06;
    vga300200ShittyAssBullshit256.m_attributeSettings[7] = 0x07;
    vga300200ShittyAssBullshit256.m_attributeSettings[8] = 0x08;
    vga300200ShittyAssBullshit256.m_attributeSettings[9] = 0x09;
    vga300200ShittyAssBullshit256.m_attributeSettings[10] = 0x0A;//A
    vga300200ShittyAssBullshit256.m_attributeSettings[11] = 0x0B;//B
    vga300200ShittyAssBullshit256.m_attributeSettings[12] = 0x0C;//C
    vga300200ShittyAssBullshit256.m_attributeSettings[13] = 0x0D;//D
    vga300200ShittyAssBullshit256.m_attributeSettings[14] = 0x0E;//R
    vga300200ShittyAssBullshit256.m_attributeSettings[15] = 0x0F;//F
    vga300200ShittyAssBullshit256.m_attributeSettings[16] = 0x41;//10
    vga300200ShittyAssBullshit256.m_attributeSettings[17] = 0x00;//11
    vga300200ShittyAssBullshit256.m_attributeSettings[18] = 0x0F;//12
    vga300200ShittyAssBullshit256.m_attributeSettings[19] = 0x00;//13
    vga300200ShittyAssBullshit256.m_attributeSettings[20] = 0x00;//14


    //crtc
    vga300200ShittyAssBullshit256.m_crtcSettings = (char*)malloc(25);
    vga300200ShittyAssBullshit256.m_crtcSettings[0] = 0x5F;
    vga300200ShittyAssBullshit256.m_crtcSettings[1] = 0x4F;
    vga300200ShittyAssBullshit256.m_crtcSettings[2] = 0x50;
    vga300200ShittyAssBullshit256.m_crtcSettings[3] = 0x82;
    vga300200ShittyAssBullshit256.m_crtcSettings[4] = 0x54;
    vga300200ShittyAssBullshit256.m_crtcSettings[5] = 0x80;
    vga300200ShittyAssBullshit256.m_crtcSettings[6] = 0xBF;
    vga300200ShittyAssBullshit256.m_crtcSettings[7] = 0x1F;
    vga300200ShittyAssBullshit256.m_crtcSettings[8] = 0x00;
    vga300200ShittyAssBullshit256.m_crtcSettings[9] = 0x41;
    vga300200ShittyAssBullshit256.m_crtcSettings[10] = 0x00;
    vga300200ShittyAssBullshit256.m_crtcSettings[11] = 0x00;
    vga300200ShittyAssBullshit256.m_crtcSettings[12] = 0x00;
    vga300200ShittyAssBullshit256.m_crtcSettings[13] = 0x00;
    vga300200ShittyAssBullshit256.m_crtcSettings[14] = 0x00;
    vga300200ShittyAssBullshit256.m_crtcSettings[15] = 0x00;
    vga300200ShittyAssBullshit256.m_crtcSettings[16] = 0x9C;
    vga300200ShittyAssBullshit256.m_crtcSettings[17] = 0x8E;
    vga300200ShittyAssBullshit256.m_crtcSettings[18] = 0x8F;
    vga300200ShittyAssBullshit256.m_crtcSettings[19] = 0x28;
    vga300200ShittyAssBullshit256.m_crtcSettings[20] = 0x40;
    vga300200ShittyAssBullshit256.m_crtcSettings[21] = 0x96;
    vga300200ShittyAssBullshit256.m_crtcSettings[22] = 0xB9;
    vga300200ShittyAssBullshit256.m_crtcSettings[23] = 0xA3;
    vga300200ShittyAssBullshit256.m_crtcSettings[24] = 0xFF;

    //general graphics
    vga300200ShittyAssBullshit256.m_graphicsControlSettings = (char*)malloc(9);
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[0] = 0x00;
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[1] = 0x00;
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[2] = 0x00;
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[3] = 0x00;
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[4] = 0x00;
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[5] = 0x40;
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[6] = 0x05;//set to D for 0xB8000, set to 05 for 0xA0000. the font data still gets corrupted eitehr way though. It probably has something to do with that bit plane nonsense (this mode uses linear memory)
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[7] = 0x0F;
    vga300200ShittyAssBullshit256.m_graphicsControlSettings[8] = 0xFF;

    //sequence
    vga300200ShittyAssBullshit256.m_sequencerSettings = (char*)malloc(5);
    vga300200ShittyAssBullshit256.m_sequencerSettings[0] = 0x03;
    vga300200ShittyAssBullshit256.m_sequencerSettings[1] = 0x01;
    vga300200ShittyAssBullshit256.m_sequencerSettings[2] = 0x0F;
    vga300200ShittyAssBullshit256.m_sequencerSettings[3] = 0x00;
    vga300200ShittyAssBullshit256.m_sequencerSettings[4] = 0x0E;

    vga300200ShittyAssBullshit256.m_miscControl = 0x63;//28mhz, 63 gets you 25mhz. try 63 if this doesn't work
}

//relies on up to date vga mode information being in ram at 449h
void resOfVGAMode(int *x, int *y);

char getvgamode();

extern "C" void vga_editPaletteReg(char registerNumber, char newValue);
extern "C" char vga_readPaletteReg(char registerNumber);
extern "C" char vga_getModeControl();

//get all the information about the mode specific registers so I can learn how to make my own graphics modes without real mode interrupts
void printVgaModeInfo(char info = 0);

bool mode13hSetup();

bool mode640Setup();

//draw a pixel in 256 color mode
void drawPixel256(unsigned short x, unsigned short y, unsigned char color);

//takes a properly formatted image that's loaded in ram and copies it to the screen
void drawImage(void* data);

//draw a test pattern in 300x200 bullshit mode
void drawTestPattern256();

//test the crtc functions to see if reading and writing works
bool vga_testcrtc();

bool vga_testSequencer();

//test the graphics control registers to see if readign and writing works
bool vga_testGraphicsControl();

//clears the crtc protection bit
void unprotectCRTC();

//sets the crtc protection bit
void protectCRTC();

//bresenham's line algorithm. Draw a line in 300x200 mode. Will probably eventually get modified to not be vga-specific since it's just going to call drawPixel functions
void bhm_line(int x1, int y1, int x2, int y2, unsigned char color);


#include "vgadriver.hpp"

#endif